/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.example.matrixmultiply;

public class example {
  public static int gcd(int x, int y) {
    return exampleJNI.gcd(x, y);
  }

  public static void setFoo(double value) {
    exampleJNI.Foo_set(value);
  }

  public static double getFoo() {
    return exampleJNI.Foo_get();
  }

  public static void setRa(int value) {
    exampleJNI.ra_set(value);
  }

  public static int getRa() {
    return exampleJNI.ra_get();
  }

  public static void setCa(int value) {
    exampleJNI.ca_set(value);
  }

  public static int getCa() {
    return exampleJNI.ca_get();
  }

  public static void setRb(int value) {
    exampleJNI.rb_set(value);
  }

  public static int getRb() {
    return exampleJNI.rb_get();
  }

  public static void setCb(int value) {
    exampleJNI.cb_set(value);
  }

  public static int getCb() {
    return exampleJNI.cb_get();
  }

  public static SWIGTYPE_p_p_int initMatrix(int rowLenA, int columnLenA, int rowLenB, int columnLenB) {
    long cPtr = exampleJNI.initMatrix(rowLenA, columnLenA, rowLenB, columnLenB);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_int(cPtr, false);
  }

  public static int getItemFromMatrix(SWIGTYPE_p_p_int matrix, int row, int column) {
    return exampleJNI.getItemFromMatrix(SWIGTYPE_p_p_int.getCPtr(matrix), row, column);
  }

  public static void parallelMatrixMultiply(SWIGTYPE_p_p_int result, int numThreads, int kind, int chunkSize) {
    exampleJNI.parallelMatrixMultiply(SWIGTYPE_p_p_int.getCPtr(result), numThreads, kind, chunkSize);
  }

  public static void matrixMultiply(SWIGTYPE_p_p_int result) {
    exampleJNI.matrixMultiply(SWIGTYPE_p_p_int.getCPtr(result));
  }

}
